% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mh_overlay.R
\name{mh_overlay}
\alias{mh_overlay}
\title{Overlay Mahalanobis-based Climate Representativeness Classifications}
\usage{
mh_overlay(folder_path)
}
\arguments{
\item{folder_path}{\code{character}. The path to the directory containing the classification rasters (\code{.tif}) generated by \code{mh_rep} or \code{mh_rep_ch}. These rasters should primarily
contain the categories: \code{1} (Retained/Represented), \code{2} (Lost), and \code{3} (Novel).
Category \code{0} (Non-represented) will be ignored for the RGB output.}
}
\value{
Invisibly returns the resulting multi-layered \code{SpatRaster} object. This object has layers representing the cumulative counts for 'Lost' (first layer), 'Retained' (second layer), and 'Novel' (third layer) categories, designed for direct RGB plotting.

Additionally, a GeoTIFF file of the combined RGB raster named 'climarep_overlay.tif' is saved in a new 'overlay' subfolder within the \code{folder_path}. Returns \code{NULL} if no valid rasters are found or processed.
}
\description{
Combines multiple single-layer rasters (\code{tif}), typically outputs from \code{mh_rep} or \code{mh_rep_ch} for different input polygons, into a multi-layered \code{SpatRaster} specifically designed for RGB visualization.

The output layers consistently represent counts for 'Lost' (Red channel), 'Retained' (Green channel), and 'Novel' (Blue channel) categories across all input rasters.

This function handles inputs from both \code{mh_rep} (which primarily contains 'Retained' areas) and \code{mh_rep_ch} (which includes 'Retained', 'Lost', and 'Novel' areas) by counting the presence of
each relevant category (1, 2, 3). If a category is not present in the input rasters, its corresponding output layer will contain zeros.
}
\details{
This function streamlines the aggregation of climate representativeness classifications for visual analysis in an RGB composite. It is designed to work seamlessly with outputs from both
\code{mh_rep} (which yields only 'Retained' or 'Represented' areas, coded as \code{1}) and \code{mh_rep_ch} (which yields 'Retained' (\code{1}), 'Lost' (\code{2}), and 'Novel' (\code{3}) areas).

For each of the three key categories (Lost, Retained, Novel), the function:
\enumerate{
\item Identifies and reads all \code{.tif} files within the \code{folder_path}.
\item For every input raster, it creates a binary layer: \code{1} if the cell's value matches the target category (e.g., \code{2} for 'Lost'), and \code{0} otherwise.
\item Sums these binary layers across all input rasters to generate a cumulative count for that specific category at each grid cell.
}

The three resulting count layers (Lost, Retained, Novel) are then consistently stacked
in the following order:
\itemize{
\item First layer (Red): Cumulative count of 'Lost'.
\item Second layer (Green): Cumulative count of 'Retained'.
\item Third layer (Blue): Cumulative count of 'Novel'.
}
This fixed order ensures that the output \code{SpatRaster} is immediately ready for direct RGB visualization using \code{terra::plotRGB()}, where the color mixtures will intuitively reflect
the spatial agreement of these change types across the input polygons.

The output \code{SpatRaster} contains raw counts. While \code{terra::plotRGB()} often handles
stretching for visualization, users might normalize these counts manually (e.g., to 0-255) for finer control over visual contrast.

A new subfolder named \verb{overlay/} will be created within the \code{folder_path} provided. The resulting three-layered RGB \code{SpatRaster} will be saved as 'climarep_overlay.tif'
inside this new \verb{overlay/} subfolder.
}
\examples{
\dontrun{
mh_overlay(folder_path = temp_dir)
terra::plot(climarep_img)
}
}
