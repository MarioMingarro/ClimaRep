% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mh_present.R
\name{mh_representativeness}
\alias{mh_representativeness}
\title{Multivariate Climatic Representativeness Analysis for a Single Period}
\usage{
mh_representativeness(
  polygon,
  col_name,
  climatic_variables,
  th = 0.95,
  dir_output = "output_representativeness/",
  save_intermediate_raster = FALSE
)
}
\arguments{
\item{polygon}{An sf object containing the analysis regions (polygons).}

\item{col_name}{Character. Name of the column in the \code{polygon} object that contains unique identifiers for each polygon.}

\item{climatic_variables}{SpatRaster. A raster stack of climate variables (preferably not strongly correlated) representing the conditions of the analysis period (e.g., the present).}

\item{th}{Numeric (0-1). Quantile threshold used to define representativeness. Pixels with a Mahalanobis distance below the distance corresponding to this quantile are considered representative (default: 0.95).}

\item{dir_output}{Character. Path to the directory where output files will be saved. The function will create subdirectories within this path (default: "output_representativeness/").}

\item{save_intermediate_raster}{Logical. If TRUE, saves intermediate Mahalanobis distance rasters calculated per polygon before classification. The final classification rasters are always saved (default: FALSE).}
}
\value{
Invisibly returns NULL. Writes to disk:
\itemize{
\item Classification GeoTIFF rasters (representing Representative and Non-representative areas) for each polygon in the \verb{Representativeness/} subdirectory within \code{dir_output}.
\item JPEG maps visualizing the classification results for each polygon in the \verb{Charts/} subdirectory within \code{dir_output}.
\item \emph{Optionally}, intermediate Mahalanobis distance rasters (if \code{save_intermediate_raster = TRUE}).
}
}
\description{
Calculates Mahalanobis-based climatic representativeness for polygons
within a defined area, using data from a single time period. Representativeness
is assessed by comparing the climate conditions of each pixel within a polygon
against the reference climate space defined by that same polygon.
}
\details{
This function performs a multivariate analysis using Mahalanobis distance to assess
the climatic representativeness of areas within specified polygons for a single time period.

Key workflow steps:
1.  \strong{CRS Harmonization:} Ensures all spatial inputs (\code{polygon}, \code{climatic_variables}) share the same Coordinate Reference System (CRS), using the CRS of \code{climatic_variables} as the reference.
2.  \strong{Per-Polygon Processing:} For each polygon in the \code{polygon} object:
     * Clips and masks the climate variables raster (\code{climatic_variables}) to the polygon's area.
     * Calculates the multivariate mean and covariance matrix using the data from the clipped and masked raster (ignoring NAs). This defines the reference climate space \emph{for that specific polygon}.
     * Calculates the Mahalanobis distance for \emph{each pixel with valid data} within the polygon, using the mean and covariance matrix calculated for that polygon.
     * Calculates the threshold (\code{th_value}) as the \code{th} quantile of the Mahalanobis distances calculated within the polygon.
     * Classifies each pixel within the polygon as "Representative" (distance <= threshold, value 1) or "Non-Representative" (distance > threshold, value 0).
3.  \strong{Output Generation:} Generates a classification raster (GeoTIFF) for each polygon and a corresponding visualization map (JPEG). Files are saved within the directory structure specified in \code{dir_output}.

It is important that the \code{climatic_variables} are not strongly correlated, as Mahalanobis distance assumes independence or uses the covariance matrix to account for correlation. Consider performing a collinearity analysis (e.g., using VIF) beforehand.
}
\examples{
\dontrun{
library(terra)
library(sf)

# Create raster data with 3 layers
r_clim <- rast(ncols=20, nrows=20)
values(r_clim) <- 1:ncell(r_clim)
r_clim$var1 <- values(r_clim) * 0.1 + rnorm(ncell(r_clim), 0, 2)
r_clim$var2 <- values(r_clim) * 0.05 + rnorm(ncell(r_clim), 0, 1)
r_clim$var3 <- rnorm(ncell(r_clim), 10, 3)
names(r_clim) <- c("id", "temp", "prec", "elev") # Example variable names

# Create two analysis polygons
polygons_sf <- st_make_grid(st_as_sf(as.polygons(ext(r_clim))), n = 2) \%>\%
   st_sf(name = c("AreaA", "AreaB"))

# Define an output directory
dir_out <- "results_present_analysis"
if (!dir.exists(dir_out)) dir.create(dir_out)

# Run the representativeness analysis for the 'present' climate data
pa_mh_representativeness(
   polygon = polygons_sf,
   col_name = "name",
   climatic_variables = r_clim,
   th = 0.9, # Use a threshold, e.g., 90th percentile
   dir_output = dir_out,
   save_intermediate_raster = FALSE
)

# Check the output files
cat("Output files in Representativeness/:\n")
print(list.files(file.path(dir_out, "Representativeness")))
cat("\nOutput files in Charts/:\n")
print(list.files(file.path(dir_out, "Charts")))
}

}
