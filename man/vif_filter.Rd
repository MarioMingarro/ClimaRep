% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VIF.R
\name{vif_filter}
\alias{vif_filter}
\title{Filter SpatRaster Layers based on Variance Inflation Factor (VIF)}
\usage{
vif_filter(x, th = 10)
}
\arguments{
\item{x}{A \code{SpatRaster} object containing the layers (variables) to filter. Must be a valid \code{SpatRaster} object with multiple layers.}

\item{th}{A numeric value specifying the Variance Inflation Factor (VIF) threshold. Layers whose VIF exceeds this threshold are candidates for removal in each step. Defaults to 10.}
}
\value{
A \code{SpatRaster} object containing only the layers from the input \code{SpatRaster} that were retained by the VIF filter. The order of the remaining layers is kept according to the original \code{SpatRaster}. If all layers are excluded during the process, an empty \code{SpatRaster} is returned.
}
\description{
This function iteratively filters layers from a \code{SpatRaster} object by removing the one with the highest Variance Inflation Factor (VIF) that exceeds a specified threshold (\code{th}). The process continues until all remaining layers have a VIF below the threshold or only one layer remains. VIF calculation is performed on the raster data converted to a \code{data.frame} after removing rows containing \code{NA} values in any column.
}
\details{
The Variance Inflation Factor (VIF) quantifies the severity of multicollinearity in a linear regression analysis. A high VIF for a variable indicates that this variable is strongly correlated with other predictor variables. In the context of environmental variable selection, a high VIF suggests redundancy of information among variables.

The function follows a common iterative procedure to reduce multicollinearity:
\enumerate{
\item The input \code{SpatRaster} is converted to a \code{data.frame}.
\item Rows containing any \code{NA} values are removed. All VIF calculations are based on this cleaned dataset.
\item The VIF is calculated for each remaining variable.
\item If the highest VIF is greater than the threshold \code{th}, the corresponding variable is removed from the dataset.
\item Steps 3 and 4 are repeated until the highest VIF among the remaining variables is less than or equal to \code{th}, or until only one variable remains.
}

During the process, the function prints messages to the console indicating which variables are being evaluated and which, if any, are removed.

The internal function for calculating VIF includes checks to handle problematic situations such as columns with zero or near-zero variance and cases of perfect collinearity, which could otherwise cause errors in VIF calculation.
}
\examples{
# requires terra package
library(terra)

r <- rast(ncols=5, nrows=5)
values(r) <- cbind(1:ncell(r), (1:ncell(r))*1.5 + rnorm(ncell(r), 0, 0.1), runif(ncell(r)))
names(r) <- c("v1", "v_corr", "v_rand")
filtered_r <- vif_filter(x = r, th = 5)
print(filtered_r)

}
